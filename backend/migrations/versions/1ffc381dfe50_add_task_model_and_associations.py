"""add_task_model_and_associations

Revision ID: 1ffc381dfe50
Revises: 9cfa5c8a8bb8
Create Date: 2025-05-19 10:16:39.645616

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1ffc381dfe50'
down_revision = '9cfa5c8a8bb8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('todo', 'in_progress', 'review', 'done', 'completed', name='task_status_enum'), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', name='task_priority_enum'), nullable=True),
    sa.Column('task_type', sa.Enum('task', 'meeting', name='task_type_enum'), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('project_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('owner_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_assignees',
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'user_id')
    )
    op.create_table('task_dependencies',
    sa.Column('task_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('depends_on_task_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('dependency_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['depends_on_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'depends_on_task_id')
    )
    with op.batch_alter_table('project_members', schema=None) as batch_op:
        batch_op.drop_constraint('project_members_project_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('project_members_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=1000),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('end_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.alter_column('end_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.String(length=1000),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('project_members', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('project_members_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key('project_members_project_id_fkey', 'projects', ['project_id'], ['id'])

    op.drop_table('task_dependencies')
    op.drop_table('task_assignees')
    op.drop_table('tasks')
    # ### end Alembic commands ###
