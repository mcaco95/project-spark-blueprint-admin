"""Add user_activities table

Revision ID: e9af1bd2533b
Revises: 637671a0f5bd
Create Date: 2025-05-19 19:47:07.622998

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e9af1bd2533b'
down_revision = '637671a0f5bd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create enum types first
    setting_type_enum = sa.Enum('string', 'boolean', 'number', name='setting_type_enum')
    setting_type_enum.create(op.get_bind())
    
    user_status_enum = sa.Enum('active', 'inactive', 'pending', name='user_status_enum')
    user_status_enum.create(op.get_bind())
    
    op.create_table('user_activities',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Execute raw SQL for type casting with proper default handling
    op.execute("ALTER TABLE system_settings ALTER COLUMN type TYPE setting_type_enum USING type::text::setting_type_enum")
    
    # First drop the default
    op.execute("ALTER TABLE users ALTER COLUMN status DROP DEFAULT")
    # Then change the type
    op.execute("ALTER TABLE users ALTER COLUMN status TYPE user_status_enum USING status::text::user_status_enum")
    # Finally set the new default
    op.execute("ALTER TABLE users ALTER COLUMN status SET DEFAULT 'pending'::user_status_enum")
    
    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.drop_constraint('system_settings_name_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_system_settings_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_settings_name'), ['name'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.Enum('active', 'inactive', 'pending', name='user_status_enum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'"))

    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_system_settings_name'))
        batch_op.drop_index(batch_op.f('ix_system_settings_category'))
        batch_op.create_unique_constraint('system_settings_name_key', ['name'])
        batch_op.alter_column('type',
               existing_type=sa.Enum('string', 'boolean', 'number', name='setting_type_enum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)

    op.drop_table('user_activities')
    
    # Drop enum types last
    sa.Enum(name='setting_type_enum').drop(op.get_bind())
    sa.Enum(name='user_status_enum').drop(op.get_bind())
    # ### end Alembic commands ###
